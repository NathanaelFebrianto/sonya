<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"
       default-lazy-init="true">
    
    <!-- Transaction manager for a single JDBC DataSource -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- SqlMap setup for iBATIS Database Layer -->
    <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation">
            <value>classpath:/sql-map-config.xml</value>
        </property>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- Generic Dao - can be used when doing standard CRUD -->
    <bean id="universalDao" class="org.sonya.dao.ibatis.UniversalDaoiBatis">
        <property name="dataSource" ref="dataSource"/>
        <property name="sqlMapClient" ref="sqlMapClient"/>
    </bean> 

    <!-- If you want to be able to do simple CRUD for new domain objects without
        having to cast, you don't have create a Dao interface and implementation
        for that domain object, you simply have to do the following.

        You will need to create a Dao interface and implementation for that
        domain object if you need more than simple CRUD to occur.
        (finders, bulk update/delete, etc.) eg... 'fooDao'

    <bean id="fooDao" class="org.sonya.dao.ibatis.GenericDaoiBatis">
        <constructor-arg value="org.sonya.model.Foo"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="sqlMapClient" ref="sqlMapClient"/>
    </bean>
    -->

    <!-- Add new DAOs here -->
</beans>
