<Shell Script>
mvn -e exec:java -Dexec.mainClass="org.apache.mahout.utils.vectors.lucene.Driver" -Dexec.args="--dir D:/firebird/index/ --field body --dictOut D:/firebird/dict.txt --output D:/firebird/vectors --minDF 5 --maxDFPercent 70"


MAVEN_OPTS="-Xmx1G -ea" mvn -e exec:java -Dexec.mainClass=org.apache.mahout.clustering.lda.LDADriver -Dexec.args="-i D:/firebird/vectors -o D:/firebird/lda/ -k 10 -v 10000 --maxIter 40"


mvn -q exec:java -Dexec.mainClass="org.apache.mahout.clustering.lda.LDAPrintTopics" -Dexec.args="-i `ls -1dtr D:/firebird/lda/state-* | tail -1` -d D:/firebird/dict.txt -o D:/firebird/topics/ -w 20"


<자체 구현 클래스>

0-0. 전체를 아우러는 분석기 -> TextAnalysisJob

1-1. 소스파일 텍스트 전처리기(불필요한 문자 제거) -> StopWordAnalyzer(X)

2-1. 소스 Doc 생성기 -> DocSourceWriter

2-2. Doc 파일로 부터 Index 생성기 -> DocIndexWriter

3-1. index 파일 로 부터 vector 생성기 -> DocVectorWriter
 org.apache.mahout.utils.vectors.lucene.Driver
 
3-2. LDA 알고리즘 실행기 -> LDAAnalyzer
 org.apache.mahout.clustering.lda.LDADriver
 
3-3. LDA 실행결과 Topic 조회기 -> LDATopics
 org.apache.mahout.clustering.lda.LDAPrintTopics
 
3-4. index 검색을 통하여 Topic의 unique words에 해당하는 user-words set 생성기 -> DocIndexSearcher

3-5. Topic별 user list 생성기 -> TopicUserSearcher
 
<최종 Output 파일>

1. word_dict
	seq, word, df
2. topic_word
	topic, word, score
3. user_word
	user_id, doc_id, word, term_freq, tf, idf, field_norm
4. topic_user
	topic, words, user_id, match_words, match_words_cnt, score?-> sum of (match_word_tf*topic_word_score)

<최종 Output 파일 로더>
OutputFileReader
	
<Recommendation Priority> -> Recommender
1. if user exists in topic_user then
	recommend other users who is not followed by user with the same topic as user in topic_user
2. if friend of user exists in topic_user then
	recommend other users who is not followed by user with the same topic as friend in topic_user
3. if friend of friend of user exists in topic_user then
	recommend friend of friend(어느정도수준까지? authority로 필터링?) &
	recommend other users who is not followed by user with the same topic as friend of friend in topic_user




	