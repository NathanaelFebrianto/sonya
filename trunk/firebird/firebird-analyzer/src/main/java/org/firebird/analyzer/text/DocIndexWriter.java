/*
 * Copyright (c) 2009-2010, Young-Gue Bae
 * All rights reserved.
 */
package org.firebird.analyzer.text;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.Reader;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Set;

import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.analysis.CharArraySet;
import org.apache.lucene.analysis.StopAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.store.FSDirectory;
import org.apache.lucene.util.Version;
import org.firebird.common.util.ConvertUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * This class creates an index with Lucene from the text files.
 * 
 * @author Young-Gue Bae
 */
public class DocIndexWriter {

	/** 
	 * An english sotp words set from 
	 * http://www.ranks.nl/tools/stopwords.html
	 * http://www.onjava.com/onjava/2003/01/15/examples/EnglishStopWords.txt
	 */
	public static final Set<?> ENGLISH_STOP_WORDS_SET;

	static {
		final List<String> stopWords = Arrays.asList(
			"a"
			, "able"
			, "about"
			, "above"
			, "abst"
			, "accordance"
			, "according"
			, "accordingly"
			, "across"
			, "act"
			, "actually"
			, "added"
			, "adj"
			, "adopted"
			, "affected"
			, "affecting"
			, "affects"
			, "after"
			, "afterwards"
			, "again"
			, "against"
			, "ah"
			, "all"
			, "almost"
			, "alone"
			, "along"
			, "already"
			, "also"
			, "although"
			, "always"
			, "am"
			, "among"
			, "amongst"
			, "an"
			, "and"
			, "announce"
			, "another"
			, "any"
			, "anybody"
			, "anyhow"
			, "anymore"
			, "anyone"
			, "anything"
			, "anyway"
			, "anyways"
			, "anywhere"
			, "apparently"
			, "approximately"
			, "are"
			, "aren"
			, "arent"
			, "arise"
			, "around"
			, "as"
			, "aside"
			, "ask"
			, "asking"
			, "at"
			, "auth"
			, "available"
			, "away"
			, "awfully"
			, "b"
			, "back"
			, "be"
			, "became"
			, "because"
			, "become"
			, "becomes"
			, "becoming"
			, "been"
			, "before"
			, "beforehand"
			, "begin"
			, "beginning"
			, "beginnings"
			, "begins"
			, "behind"
			, "being"
			, "believe"
			, "below"
			, "beside"
			, "besides"
			, "between"
			, "beyond"
			, "biol"
			, "both"
			, "brief"
			, "briefly"
			, "but"
			, "by"
			, "c"
			, "ca"
			, "came"
			, "can"
			, "cannot"
			, "cant"
			, "cause"
			, "causes"
			, "certain"
			, "certainly"
			, "co"
			, "com"
			, "come"
			, "comes"
			, "contain"
			, "containing"
			, "contains"
			, "could"
			, "couldnt"
			, "d"
			, "date"
			, "did"
			, "didnt"
			, "different"
			, "do"
			, "does"
			, "doesnt"
			, "doing"
			, "done"
			, "dont"
			, "down"
			, "downwards"
			, "due"
			, "during"
			, "e"
			, "each"
			, "ed"
			, "edu"
			, "effect"
			, "eg"
			, "eight"
			, "eighty"
			, "either"
			, "else"
			, "elsewhere"
			, "end"
			, "ending"
			, "enough"
			, "especially"
			, "et"
			, "et-al"
			, "etc"
			, "even"
			, "ever"
			, "every"
			, "everybody"
			, "everyone"
			, "everything"
			, "everywhere"
			, "ex"
			, "except"
			, "f"
			, "far"
			, "few"
			, "ff"
			, "fifth"
			, "first"
			, "five"
			, "fix"
			, "followed"
			, "following"
			, "follows"
			, "for"
			, "former"
			, "formerly"
			, "forth"
			, "found"
			, "four"
			, "from"
			, "further"
			, "furthermore"
			, "g"
			, "gave"
			, "get"
			, "gets"
			, "getting"
			, "give"
			, "given"
			, "gives"
			, "giving"
			, "go"
			, "goes"
			, "gone"
			, "got"
			, "gotten"
			, "h"
			, "had"
			, "happens"
			, "hardly"
			, "has"
			, "hasnt"
			, "have"
			, "havent"
			, "having"
			, "he"
			, "hed"
			, "hence"
			, "her"
			, "here"
			, "hereafter"
			, "hereby"
			, "herein"
			, "heres"
			, "hereupon"
			, "hers"
			, "herself"
			, "hes"
			, "hi"
			, "hid"
			, "him"
			, "himself"
			, "his"
			, "hither"
			, "home"
			, "how"
			, "howbeit"
			, "however"
			, "hundred"
			, "i"
			, "id"
			, "ie"
			, "if"
			, "i'll"
			, "im"
			, "immediate"
			, "immediately"
			, "importance"
			, "important"
			, "in"
			, "inc"
			, "indeed"
			, "index"
			, "information"
			, "instead"
			, "into"
			, "invention"
			, "inward"
			, "is"
			, "isnt"
			, "it"
			, "itd"
			, "it'll"
			, "its"
			, "itself"
			, "i've"
			, "j"
			, "just"
			, "k"
			, "keep"
			, "keeps"
			, "kept"
			, "keys"
			, "kg"
			, "km"
			, "know"
			, "known"
			, "knows"
			, "l"
			, "largely"
			, "last"
			, "lately"
			, "later"
			, "latter"
			, "latterly"
			, "least"
			, "less"
			, "lest"
			, "let"
			, "lets"
			, "like"
			, "liked"
			, "likely"
			, "line"
			, "little"
			, "'ll"
			, "look"
			, "looking"
			, "looks"
			, "ltd"
			, "m"
			, "made"
			, "mainly"
			, "make"
			, "makes"
			, "many"
			, "may"
			, "maybe"
			, "me"
			, "mean"
			, "means"
			, "meantime"
			, "meanwhile"
			, "merely"
			, "mg"
			, "might"
			, "million"
			, "miss"
			, "ml"
			, "more"
			, "moreover"
			, "most"
			, "mostly"
			, "mr"
			, "mrs"
			, "much"
			, "mug"
			, "must"
			, "my"
			, "myself"
			, "n"
			, "na"
			, "name"
			, "namely"
			, "nay"
			, "nd"
			, "near"
			, "nearly"
			, "necessarily"
			, "necessary"
			, "need"
			, "needs"
			, "neither"
			, "never"
			, "nevertheless"
			, "new"
			, "next"
			, "nine"
			, "ninety"
			, "no"
			, "nobody"
			, "non"
			, "none"
			, "nonetheless"
			, "noone"
			, "nor"
			, "normally"
			, "nos"
			, "not"
			, "noted"
			, "nothing"
			, "now"
			, "nowhere"
			, "o"
			, "obtain"
			, "obtained"
			, "obviously"
			, "of"
			, "off"
			, "often"
			, "oh"
			, "ok"
			, "okay"
			, "old"
			, "omitted"
			, "on"
			, "once"
			, "one"
			, "ones"
			, "only"
			, "onto"
			, "or"
			, "ord"
			, "other"
			, "others"
			, "otherwise"
			, "ought"
			, "our"
			, "ours"
			, "ourselves"
			, "out"
			, "outside"
			, "over"
			, "overall"
			, "owing"
			, "own"
			, "p"
			, "page"
			, "pages"
			, "part"
			, "particular"
			, "particularly"
			, "past"
			, "per"
			, "perhaps"
			, "placed"
			, "please"
			, "plus"
			, "poorly"
			, "possible"
			, "possibly"
			, "potentially"
			, "pp"
			, "predominantly"
			, "present"
			, "previously"
			, "primarily"
			, "probably"
			, "promptly"
			, "proud"
			, "provides"
			, "put"
			, "q"
			, "que"
			, "quickly"
			, "quite"
			, "qv"
			, "r"
			, "ran"
			, "rather"
			, "rd"
			, "re"
			, "readily"
			, "really"
			, "recent"
			, "recently"
			, "ref"
			, "refs"
			, "regarding"
			, "regardless"
			, "regards"
			, "related"
			, "relatively"
			, "research"
			, "respectively"
			, "resulted"
			, "resulting"
			, "results"
			, "right"
			, "run"
			, "s"
			, "said"
			, "same"
			, "saw"
			, "say"
			, "saying"
			, "says"
			, "sec"
			, "section"
			, "see"
			, "seeing"
			, "seem"
			, "seemed"
			, "seeming"
			, "seems"
			, "seen"
			, "self"
			, "selves"
			, "sent"
			, "seven"
			, "several"
			, "shall"
			, "she"
			, "shed"
			, "she'll"
			, "shes"
			, "should"
			, "shouldnt"
			, "show"
			, "showed"
			, "shown"
			, "showns"
			, "shows"
			, "significant"
			, "significantly"
			, "similar"
			, "similarly"
			, "since"
			, "six"
			, "slightly"
			, "so"
			, "some"
			, "somebody"
			, "somehow"
			, "someone"
			, "somethan"
			, "something"
			, "sometime"
			, "sometimes"
			, "somewhat"
			, "somewhere"
			, "soon"
			, "sorry"
			, "specifically"
			, "specified"
			, "specify"
			, "specifying"
			, "state"
			, "states"
			, "still"
			, "stop"
			, "strongly"
			, "sub"
			, "substantially"
			, "successfully"
			, "such"
			, "sufficiently"
			, "suggest"
			, "sup"
			, "sure"
			, "t"
			, "take"
			, "taken"
			, "taking"
			, "tell"
			, "tends"
			, "th"
			, "than"
			, "thank"
			, "thanks"
			, "thanx"
			, "that"
			, "that'll"
			, "thats"
			, "that've"
			, "the"
			, "their"
			, "theirs"
			, "them"
			, "themselves"
			, "then"
			, "thence"
			, "there"
			, "thereafter"
			, "thereby"
			, "thered"
			, "therefore"
			, "therein"
			, "there'll"
			, "thereof"
			, "therere"
			, "theres"
			, "thereto"
			, "thereupon"
			, "there've"
			, "these"
			, "they"
			, "theyd"
			, "they'll"
			, "theyre"
			, "they've"
			, "think"
			, "this"
			, "those"
			, "thou"
			, "though"
			, "thoughh"
			, "thousand"
			, "throug"
			, "through"
			, "throughout"
			, "thru"
			, "thus"
			, "til"
			, "tip"
			, "to"
			, "together"
			, "too"
			, "took"
			, "toward"
			, "towards"
			, "tried"
			, "tries"
			, "truly"
			, "try"
			, "trying"
			, "ts"
			, "twice"
			, "two"
			, "u"
			, "un"
			, "under"
			, "unfortunately"
			, "unless"
			, "unlike"
			, "unlikely"
			, "until"
			, "unto"
			, "up"
			, "upon"
			, "ups"
			, "us"
			, "use"
			, "used"
			, "useful"
			, "usefully"
			, "usefulness"
			, "uses"
			, "using"
			, "usually"
			, "v"
			, "value"
			, "various"
			, "'ve"
			, "very"
			, "via"
			, "viz"
			, "vol"
			, "vols"
			, "vs"
			, "w"
			, "want"
			, "wants"
			, "was"
			, "wasnt"
			, "way"
			, "we"
			, "wed"
			, "welcome"
			, "we'll"
			, "went"
			, "were"
			, "werent"
			, "we've"
			, "what"
			, "whatever"
			, "what'll"
			, "whats"
			, "when"
			, "whence"
			, "whenever"
			, "where"
			, "whereafter"
			, "whereas"
			, "whereby"
			, "wherein"
			, "wheres"
			, "whereupon"
			, "wherever"
			, "whether"
			, "which"
			, "while"
			, "whim"
			, "whither"
			, "who"
			, "whod"
			, "whoever"
			, "whole"
			, "who'll"
			, "whom"
			, "whomever"
			, "whos"
			, "whose"
			, "why"
			, "widely"
			, "willing"
			, "wish"
			, "with"
			, "within"
			, "without"
			, "wont"
			, "words"
			, "world"
			, "would"
			, "wouldnt"
			, "www"
			, "x"
			, "y"
			, "yes"
			, "yet"
			, "you"
			, "youd"
			, "you'll"
			, "your"
			, "youre"
			, "yours"
			, "yourself"
			, "yourselves"
			, "you've"
			, "z"
			, "zero"
			
			, "aren't"
			, "can't"
			, "didn"
			, "didn't"
			, "doesn't"
			, "don"
			, "don't"
			, "doesn"
			, "going"
			, "http"
			, "i'm"
			, "isn"
			, "isn't"
			, "rt"
			, "will"
			, "we're"
			, "won"
			, "you're"
		);
		final CharArraySet stopSet = new CharArraySet(stopWords.size(), false);
		stopSet.addAll(stopWords);
		ENGLISH_STOP_WORDS_SET = CharArraySet.unmodifiableSet(stopSet);
	}
	
	private static final Logger log = LoggerFactory.getLogger(DocIndexWriter.class);
	
	/**
	 * Constructor.
	 * 
	 */
	public DocIndexWriter() {}

	/**
	 * Creates an index with Lucene from the text files.
	 * 
	 * @param inputDir the file directory that contains the text files to be indexed
	 * @param ouputDir the index directory that hosts Lucene's index files
	 * @exception
	 */
	public void write(String inputDir, String ouputDir) throws Exception {
		
		File fileDir = new File(inputDir);
		FSDirectory indexDir = FSDirectory.open(new File(ouputDir));
		
		//Analyzer luceneAnalyzer = new StandardAnalyzer(Version.LUCENE_CURRENT, ENGLISH_STOP_WORDS_SET);
		Analyzer luceneAnalyzer = new StopAnalyzer(Version.LUCENE_CURRENT, ENGLISH_STOP_WORDS_SET);
		IndexWriter indexWriter = new IndexWriter(indexDir, luceneAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);
		File[] textFiles = fileDir.listFiles();
		long startTime = new Date().getTime();

		// add documents to the index
		for (int i = 0; i < textFiles.length; i++) {
			if (textFiles[i].getName().endsWith(".txt")) {
				//log.info("creating index : {}", textFiles[i].getCanonicalPath());
				System.out.println("creating index : " + textFiles[i].getCanonicalPath());
				
				Reader textReader = new FileReader(textFiles[i]);
				
		        // first line is the user id, rest from 3rd line is the body
		        BufferedReader reader = new BufferedReader(textReader);
		        String timeline = reader.readLine();
		        String userId = reader.readLine();
		        //log.info("userId == {}", userId);
		        System.out.println("timeline == " + timeline);
		        System.out.println("userId == " + userId);
		        reader.readLine();// skip an empty line

		        StringBuffer bodyBuffer = new StringBuffer(1024);
		        String line = null;
		        while ((line = reader.readLine()) != null) {
		        	bodyBuffer.append(line).append(' ');
		        }
		        reader.close();
		        
		        //log.info("body == {}\n", bodyBuffer.toString());
		        System.out.println("body == " + bodyBuffer.toString()+ "\n");
		        
				Document document = new Document();
				document.add(new Field("user", userId, Field.Store.YES, Field.Index.ANALYZED_NO_NORMS, Field.TermVector.NO));
				document.add(new Field("body", bodyBuffer.toString(), Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.YES));
				document.add(new Field("path", textFiles[i].getPath(), Field.Store.YES, Field.Index.ANALYZED_NO_NORMS, Field.TermVector.NO));
				document.add(new Field("timeline", timeline, Field.Store.YES, Field.Index.ANALYZED_NO_NORMS, Field.TermVector.NO));
				document.add(new Field("indexDate", ConvertUtil.convertDateToString("yyyyMMdd", new Date()), Field.Store.YES, Field.Index.ANALYZED_NO_NORMS, Field.TermVector.NO));
				indexWriter.addDocument(document);
			}
		}

		indexWriter.optimize();
		indexWriter.close();
		long endTime = new Date().getTime();

		//log.info("It took {} milliseconds to create an index from the files in the directory {}",
		//				(endTime - startTime), 
		//				fileDir.getPath());
		System.out.println("It took " + (endTime - startTime) 
				+ "milliseconds to create an index from the files in the directory "
				+ fileDir.getPath());
	}
	
}
